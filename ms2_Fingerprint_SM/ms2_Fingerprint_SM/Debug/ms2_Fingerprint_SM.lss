
ms2_Fingerprint_SM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  00000794  00000828  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000794  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001a0  008001a0  000008c8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000938  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f56  00000000  00000000  00000a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b7  00000000  00000000  0000298e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cd2  00000000  00000000  00003345  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000288  00000000  00000000  00004018  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005fb  00000000  00000000  000042a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a19  00000000  00000000  0000489b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  000052b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	7e c0       	rjmp	.+252    	; 0x132 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e9       	ldi	r30, 0x94	; 148
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 3a       	cpi	r26, 0xA0	; 160
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 ea       	ldi	r26, 0xA0	; 160
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 3a       	cpi	r26, 0xA6	; 166
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	47 d3       	rcall	.+1678   	; 0x752 <main>
  c4:	65 c3       	rjmp	.+1738   	; 0x790 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerSet>:
			if(ch==0x00) {
				//PORTA |= (1<<7);
			}
		}
	}
}
  c8:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
  cc:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
  d0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
  d4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
  d8:	60 93 a0 01 	sts	0x01A0, r22	; 0x8001a0 <__data_end>
  dc:	70 93 a1 01 	sts	0x01A1, r23	; 0x8001a1 <__data_end+0x1>
  e0:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <__data_end+0x2>
  e4:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <__data_end+0x3>
  e8:	08 95       	ret

000000ea <TimerOn>:
  ea:	8b e0       	ldi	r24, 0x0B	; 11
  ec:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  f0:	8d e7       	ldi	r24, 0x7D	; 125
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  fc:	82 e0       	ldi	r24, 0x02	; 2
  fe:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 102:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 106:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 10a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 10e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 112:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 116:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 11a:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <__data_end>
 11e:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <__data_end+0x1>
 122:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <__data_end+0x2>
 126:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <__data_end+0x3>
 12a:	8f b7       	in	r24, 0x3f	; 63
 12c:	80 68       	ori	r24, 0x80	; 128
 12e:	8f bf       	out	0x3f, r24	; 63
 130:	08 95       	ret

00000132 <__vector_13>:
 132:	1f 92       	push	r1
 134:	0f 92       	push	r0
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	0f 92       	push	r0
 13a:	11 24       	eor	r1, r1
 13c:	8f 93       	push	r24
 13e:	9f 93       	push	r25
 140:	af 93       	push	r26
 142:	bf 93       	push	r27
 144:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <__data_end>
 148:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <__data_end+0x1>
 14c:	a0 91 a2 01 	lds	r26, 0x01A2	; 0x8001a2 <__data_end+0x2>
 150:	b0 91 a3 01 	lds	r27, 0x01A3	; 0x8001a3 <__data_end+0x3>
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	a1 09       	sbc	r26, r1
 158:	b1 09       	sbc	r27, r1
 15a:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <__data_end>
 15e:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <__data_end+0x1>
 162:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <__data_end+0x2>
 166:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <__data_end+0x3>
 16a:	89 2b       	or	r24, r25
 16c:	8a 2b       	or	r24, r26
 16e:	8b 2b       	or	r24, r27
 170:	99 f4       	brne	.+38     	; 0x198 <__vector_13+0x66>
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <TimerFlag>
 178:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 17c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 180:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 184:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 188:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <__data_end>
 18c:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <__data_end+0x1>
 190:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <__data_end+0x2>
 194:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <__data_end+0x3>
 198:	bf 91       	pop	r27
 19a:	af 91       	pop	r26
 19c:	9f 91       	pop	r25
 19e:	8f 91       	pop	r24
 1a0:	0f 90       	pop	r0
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	0f 90       	pop	r0
 1a6:	1f 90       	pop	r1
 1a8:	18 95       	reti

000001aa <initUSART>:
 1aa:	81 30       	cpi	r24, 0x01	; 1
 1ac:	81 f0       	breq	.+32     	; 0x1ce <initUSART+0x24>
 1ae:	e1 ec       	ldi	r30, 0xC1	; 193
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	80 81       	ld	r24, Z
 1b4:	88 61       	ori	r24, 0x18	; 24
 1b6:	80 83       	st	Z, r24
 1b8:	e2 ec       	ldi	r30, 0xC2	; 194
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	80 81       	ld	r24, Z
 1be:	86 60       	ori	r24, 0x06	; 6
 1c0:	80 83       	st	Z, r24
 1c2:	83 e3       	ldi	r24, 0x33	; 51
 1c4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 1c8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 1cc:	08 95       	ret
 1ce:	e9 ec       	ldi	r30, 0xC9	; 201
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	80 81       	ld	r24, Z
 1d4:	88 61       	ori	r24, 0x18	; 24
 1d6:	80 83       	st	Z, r24
 1d8:	ea ec       	ldi	r30, 0xCA	; 202
 1da:	f0 e0       	ldi	r31, 0x00	; 0
 1dc:	80 81       	ld	r24, Z
 1de:	86 60       	ori	r24, 0x06	; 6
 1e0:	80 83       	st	Z, r24
 1e2:	87 e0       	ldi	r24, 0x07	; 7
 1e4:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
 1e8:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
 1ec:	08 95       	ret

000001ee <USART_Flush>:
 1ee:	81 30       	cpi	r24, 0x01	; 1
 1f0:	29 f4       	brne	.+10     	; 0x1fc <USART_Flush+0xe>
 1f2:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 1f6:	88 23       	and	r24, r24
 1f8:	74 f0       	brlt	.+28     	; 0x216 <USART_Flush+0x28>
 1fa:	08 95       	ret
 1fc:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 200:	88 23       	and	r24, r24
 202:	8c f4       	brge	.+34     	; 0x226 <USART_Flush+0x38>
 204:	a6 ec       	ldi	r26, 0xC6	; 198
 206:	b0 e0       	ldi	r27, 0x00	; 0
 208:	e0 ec       	ldi	r30, 0xC0	; 192
 20a:	f0 e0       	ldi	r31, 0x00	; 0
 20c:	8c 91       	ld	r24, X
 20e:	80 81       	ld	r24, Z
 210:	88 23       	and	r24, r24
 212:	e4 f3       	brlt	.-8      	; 0x20c <USART_Flush+0x1e>
 214:	08 95       	ret
 216:	ae ec       	ldi	r26, 0xCE	; 206
 218:	b0 e0       	ldi	r27, 0x00	; 0
 21a:	e8 ec       	ldi	r30, 0xC8	; 200
 21c:	f0 e0       	ldi	r31, 0x00	; 0
 21e:	8c 91       	ld	r24, X
 220:	80 81       	ld	r24, Z
 222:	88 23       	and	r24, r24
 224:	e4 f3       	brlt	.-8      	; 0x21e <USART_Flush+0x30>
 226:	08 95       	ret

00000228 <USART_Send>:
 228:	61 30       	cpi	r22, 0x01	; 1
 22a:	41 f0       	breq	.+16     	; 0x23c <USART_Send+0x14>
 22c:	e0 ec       	ldi	r30, 0xC0	; 192
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	90 81       	ld	r25, Z
 232:	95 ff       	sbrs	r25, 5
 234:	fd cf       	rjmp	.-6      	; 0x230 <USART_Send+0x8>
 236:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 23a:	08 95       	ret
 23c:	e8 ec       	ldi	r30, 0xC8	; 200
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	90 81       	ld	r25, Z
 242:	95 ff       	sbrs	r25, 5
 244:	fd cf       	rjmp	.-6      	; 0x240 <USART_Send+0x18>
 246:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 24a:	08 95       	ret

0000024c <USART_Receive>:
 24c:	81 30       	cpi	r24, 0x01	; 1
 24e:	41 f0       	breq	.+16     	; 0x260 <USART_Receive+0x14>
 250:	e0 ec       	ldi	r30, 0xC0	; 192
 252:	f0 e0       	ldi	r31, 0x00	; 0
 254:	80 81       	ld	r24, Z
 256:	88 23       	and	r24, r24
 258:	ec f7       	brge	.-6      	; 0x254 <USART_Receive+0x8>
 25a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 25e:	08 95       	ret
 260:	e8 ec       	ldi	r30, 0xC8	; 200
 262:	f0 e0       	ldi	r31, 0x00	; 0
 264:	80 81       	ld	r24, Z
 266:	88 23       	and	r24, r24
 268:	ec f7       	brge	.-6      	; 0x264 <USART_Receive+0x18>
 26a:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 26e:	08 95       	ret

00000270 <delay_ms>:
 270:	18 16       	cp	r1, r24
 272:	19 06       	cpc	r1, r25
 274:	5c f0       	brlt	.+22     	; 0x28c <delay_ms+0x1c>
 276:	08 95       	ret
 278:	00 00       	nop
 27a:	21 50       	subi	r18, 0x01	; 1
 27c:	31 09       	sbc	r19, r1
 27e:	e1 f7       	brne	.-8      	; 0x278 <delay_ms+0x8>
 280:	4f 5f       	subi	r20, 0xFF	; 255
 282:	5f 4f       	sbci	r21, 0xFF	; 255
 284:	84 17       	cp	r24, r20
 286:	95 07       	cpc	r25, r21
 288:	19 f4       	brne	.+6      	; 0x290 <delay_ms+0x20>
 28a:	08 95       	ret
 28c:	40 e0       	ldi	r20, 0x00	; 0
 28e:	50 e0       	ldi	r21, 0x00	; 0
 290:	27 e0       	ldi	r18, 0x07	; 7
 292:	33 e0       	ldi	r19, 0x03	; 3
 294:	f1 cf       	rjmp	.-30     	; 0x278 <delay_ms+0x8>

00000296 <LCD_WriteCommand>:
 296:	5e 98       	cbi	0x0b, 6	; 11
 298:	88 b9       	out	0x08, r24	; 8
 29a:	5f 9a       	sbi	0x0b, 7	; 11
 29c:	00 00       	nop
 29e:	5f 98       	cbi	0x0b, 7	; 11
 2a0:	82 e0       	ldi	r24, 0x02	; 2
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	e5 cf       	rjmp	.-54     	; 0x270 <delay_ms>
 2a6:	08 95       	ret

000002a8 <LCD_ClearScreen>:
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	f5 cf       	rjmp	.-22     	; 0x296 <LCD_WriteCommand>
 2ac:	08 95       	ret

000002ae <LCD_init>:
 2ae:	84 e6       	ldi	r24, 0x64	; 100
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	de df       	rcall	.-68     	; 0x270 <delay_ms>
 2b4:	88 e3       	ldi	r24, 0x38	; 56
 2b6:	ef df       	rcall	.-34     	; 0x296 <LCD_WriteCommand>
 2b8:	86 e0       	ldi	r24, 0x06	; 6
 2ba:	ed df       	rcall	.-38     	; 0x296 <LCD_WriteCommand>
 2bc:	8f e0       	ldi	r24, 0x0F	; 15
 2be:	eb df       	rcall	.-42     	; 0x296 <LCD_WriteCommand>
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	e9 df       	rcall	.-46     	; 0x296 <LCD_WriteCommand>
 2c4:	8a e0       	ldi	r24, 0x0A	; 10
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	d3 cf       	rjmp	.-90     	; 0x270 <delay_ms>
 2ca:	08 95       	ret

000002cc <LCD_WriteData>:
 2cc:	5e 9a       	sbi	0x0b, 6	; 11
 2ce:	88 b9       	out	0x08, r24	; 8
 2d0:	5f 9a       	sbi	0x0b, 7	; 11
 2d2:	00 00       	nop
 2d4:	5f 98       	cbi	0x0b, 7	; 11
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	ca cf       	rjmp	.-108    	; 0x270 <delay_ms>
 2dc:	08 95       	ret

000002de <LCD_Cursor>:
 2de:	81 31       	cpi	r24, 0x11	; 17
 2e0:	18 f4       	brcc	.+6      	; 0x2e8 <LCD_Cursor+0xa>
 2e2:	81 58       	subi	r24, 0x81	; 129
 2e4:	d8 cf       	rjmp	.-80     	; 0x296 <LCD_WriteCommand>
 2e6:	08 95       	ret
 2e8:	81 55       	subi	r24, 0x51	; 81
 2ea:	d5 cf       	rjmp	.-86     	; 0x296 <LCD_WriteCommand>
 2ec:	08 95       	ret

000002ee <LCD_DisplayString>:
 2ee:	1f 93       	push	r17
 2f0:	cf 93       	push	r28
 2f2:	df 93       	push	r29
 2f4:	fb 01       	movw	r30, r22
 2f6:	90 81       	ld	r25, Z
 2f8:	99 23       	and	r25, r25
 2fa:	51 f0       	breq	.+20     	; 0x310 <LCD_DisplayString+0x22>
 2fc:	eb 01       	movw	r28, r22
 2fe:	11 e0       	ldi	r17, 0x01	; 1
 300:	18 0f       	add	r17, r24
 302:	ed df       	rcall	.-38     	; 0x2de <LCD_Cursor>
 304:	89 91       	ld	r24, Y+
 306:	e2 df       	rcall	.-60     	; 0x2cc <LCD_WriteData>
 308:	81 2f       	mov	r24, r17
 30a:	98 81       	ld	r25, Y
 30c:	91 11       	cpse	r25, r1
 30e:	f7 cf       	rjmp	.-18     	; 0x2fe <LCD_DisplayString+0x10>
 310:	df 91       	pop	r29
 312:	cf 91       	pop	r28
 314:	1f 91       	pop	r17
 316:	08 95       	ret

00000318 <read_finger_1>:
 318:	ef 92       	push	r14
 31a:	ff 92       	push	r15
 31c:	0f 93       	push	r16
 31e:	1f 93       	push	r17
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 328:	85 ff       	sbrs	r24, 5
 32a:	85 c0       	rjmp	.+266    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 32c:	64 e0       	ldi	r22, 0x04	; 4
 32e:	71 e0       	ldi	r23, 0x01	; 1
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	dd df       	rcall	.-70     	; 0x2ee <LCD_DisplayString>
 334:	65 e1       	ldi	r22, 0x15	; 21
 336:	71 e0       	ldi	r23, 0x01	; 1
 338:	81 e1       	ldi	r24, 0x11	; 17
 33a:	d9 df       	rcall	.-78     	; 0x2ee <LCD_DisplayString>
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	57 df       	rcall	.-338    	; 0x1ee <USART_Flush>
 340:	61 e0       	ldi	r22, 0x01	; 1
 342:	8f ee       	ldi	r24, 0xEF	; 239
 344:	71 df       	rcall	.-286    	; 0x228 <USART_Send>
 346:	61 e0       	ldi	r22, 0x01	; 1
 348:	81 e0       	ldi	r24, 0x01	; 1
 34a:	6e df       	rcall	.-292    	; 0x228 <USART_Send>
 34c:	61 e0       	ldi	r22, 0x01	; 1
 34e:	8f ef       	ldi	r24, 0xFF	; 255
 350:	6b df       	rcall	.-298    	; 0x228 <USART_Send>
 352:	61 e0       	ldi	r22, 0x01	; 1
 354:	8f ef       	ldi	r24, 0xFF	; 255
 356:	68 df       	rcall	.-304    	; 0x228 <USART_Send>
 358:	61 e0       	ldi	r22, 0x01	; 1
 35a:	8f ef       	ldi	r24, 0xFF	; 255
 35c:	65 df       	rcall	.-310    	; 0x228 <USART_Send>
 35e:	61 e0       	ldi	r22, 0x01	; 1
 360:	8f ef       	ldi	r24, 0xFF	; 255
 362:	62 df       	rcall	.-316    	; 0x228 <USART_Send>
 364:	61 e0       	ldi	r22, 0x01	; 1
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	5f df       	rcall	.-322    	; 0x228 <USART_Send>
 36a:	61 e0       	ldi	r22, 0x01	; 1
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	5c df       	rcall	.-328    	; 0x228 <USART_Send>
 370:	61 e0       	ldi	r22, 0x01	; 1
 372:	83 e0       	ldi	r24, 0x03	; 3
 374:	59 df       	rcall	.-334    	; 0x228 <USART_Send>
 376:	61 e0       	ldi	r22, 0x01	; 1
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	56 df       	rcall	.-340    	; 0x228 <USART_Send>
 37c:	61 e0       	ldi	r22, 0x01	; 1
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	53 df       	rcall	.-346    	; 0x228 <USART_Send>
 382:	61 e0       	ldi	r22, 0x01	; 1
 384:	85 e0       	ldi	r24, 0x05	; 5
 386:	50 df       	rcall	.-352    	; 0x228 <USART_Send>
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	60 df       	rcall	.-320    	; 0x24c <USART_Receive>
 38c:	c0 e0       	ldi	r28, 0x00	; 0
 38e:	d0 e0       	ldi	r29, 0x00	; 0
 390:	e1 2c       	mov	r14, r1
 392:	f1 2c       	mov	r15, r1
 394:	4b c0       	rjmp	.+150    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	59 df       	rcall	.-334    	; 0x24c <USART_Receive>
 39a:	18 2f       	mov	r17, r24
 39c:	c9 30       	cpi	r28, 0x09	; 9
 39e:	d1 05       	cpc	r29, r1
 3a0:	09 f0       	breq	.+2      	; 0x3a4 <read_finger_1+0x8c>
 3a2:	44 c0       	rjmp	.+136    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	52 df       	rcall	.-348    	; 0x24c <USART_Receive>
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	50 df       	rcall	.-352    	; 0x24c <USART_Receive>
 3ac:	11 11       	cpse	r17, r1
 3ae:	43 c0       	rjmp	.+134    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3b0:	81 e0       	ldi	r24, 0x01	; 1
 3b2:	1d df       	rcall	.-454    	; 0x1ee <USART_Flush>
 3b4:	61 e0       	ldi	r22, 0x01	; 1
 3b6:	8f ee       	ldi	r24, 0xEF	; 239
 3b8:	37 df       	rcall	.-402    	; 0x228 <USART_Send>
 3ba:	61 e0       	ldi	r22, 0x01	; 1
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	34 df       	rcall	.-408    	; 0x228 <USART_Send>
 3c0:	61 e0       	ldi	r22, 0x01	; 1
 3c2:	8f ef       	ldi	r24, 0xFF	; 255
 3c4:	31 df       	rcall	.-414    	; 0x228 <USART_Send>
 3c6:	61 e0       	ldi	r22, 0x01	; 1
 3c8:	8f ef       	ldi	r24, 0xFF	; 255
 3ca:	2e df       	rcall	.-420    	; 0x228 <USART_Send>
 3cc:	61 e0       	ldi	r22, 0x01	; 1
 3ce:	8f ef       	ldi	r24, 0xFF	; 255
 3d0:	2b df       	rcall	.-426    	; 0x228 <USART_Send>
 3d2:	61 e0       	ldi	r22, 0x01	; 1
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	28 df       	rcall	.-432    	; 0x228 <USART_Send>
 3d8:	61 e0       	ldi	r22, 0x01	; 1
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	25 df       	rcall	.-438    	; 0x228 <USART_Send>
 3de:	61 e0       	ldi	r22, 0x01	; 1
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	22 df       	rcall	.-444    	; 0x228 <USART_Send>
 3e4:	61 e0       	ldi	r22, 0x01	; 1
 3e6:	84 e0       	ldi	r24, 0x04	; 4
 3e8:	1f df       	rcall	.-450    	; 0x228 <USART_Send>
 3ea:	61 e0       	ldi	r22, 0x01	; 1
 3ec:	82 e0       	ldi	r24, 0x02	; 2
 3ee:	1c df       	rcall	.-456    	; 0x228 <USART_Send>
 3f0:	61 e0       	ldi	r22, 0x01	; 1
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	19 df       	rcall	.-462    	; 0x228 <USART_Send>
 3f6:	61 e0       	ldi	r22, 0x01	; 1
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	16 df       	rcall	.-468    	; 0x228 <USART_Send>
 3fc:	61 e0       	ldi	r22, 0x01	; 1
 3fe:	88 e0       	ldi	r24, 0x08	; 8
 400:	13 df       	rcall	.-474    	; 0x228 <USART_Send>
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	23 df       	rcall	.-442    	; 0x24c <USART_Receive>
 406:	ce 2d       	mov	r28, r14
 408:	df 2d       	mov	r29, r15
 40a:	06 c0       	rjmp	.+12     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 40c:	81 e0       	ldi	r24, 0x01	; 1
 40e:	1e df       	rcall	.-452    	; 0x24c <USART_Receive>
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	1c df       	rcall	.-456    	; 0x24c <USART_Receive>
 414:	22 96       	adiw	r28, 0x02	; 2
 416:	0a c0       	rjmp	.+20     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 418:	8e 01       	movw	r16, r28
 41a:	0f 5f       	subi	r16, 0xFF	; 255
 41c:	1f 4f       	sbci	r17, 0xFF	; 255
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	15 df       	rcall	.-470    	; 0x24c <USART_Receive>
 422:	09 30       	cpi	r16, 0x09	; 9
 424:	11 05       	cpc	r17, r1
 426:	91 f3       	breq	.-28     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 428:	e8 01       	movw	r28, r16
 42a:	f6 cf       	rjmp	.-20     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 42c:	21 96       	adiw	r28, 0x01	; 1
 42e:	ca 30       	cpi	r28, 0x0A	; 10
 430:	d1 05       	cpc	r29, r1
 432:	0c f4       	brge	.+2      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 434:	b0 cf       	rjmp	.-160    	; 0x396 <read_finger_1+0x7e>
 436:	88 ee       	ldi	r24, 0xE8	; 232
 438:	93 e0       	ldi	r25, 0x03	; 3
 43a:	1a df       	rcall	.-460    	; 0x270 <delay_ms>
 43c:	df 91       	pop	r29
 43e:	cf 91       	pop	r28
 440:	1f 91       	pop	r17
 442:	0f 91       	pop	r16
 444:	ff 90       	pop	r15
 446:	ef 90       	pop	r14
 448:	08 95       	ret

0000044a <read_finger_2>:
 44a:	ef 92       	push	r14
 44c:	ff 92       	push	r15
 44e:	0f 93       	push	r16
 450:	1f 93       	push	r17
 452:	cf 93       	push	r28
 454:	df 93       	push	r29
 456:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 45a:	85 ff       	sbrs	r24, 5
 45c:	85 c0       	rjmp	.+266    	; 0x568 <read_finger_2+0x11e>
 45e:	64 e0       	ldi	r22, 0x04	; 4
 460:	71 e0       	ldi	r23, 0x01	; 1
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	44 df       	rcall	.-376    	; 0x2ee <LCD_DisplayString>
 466:	66 e2       	ldi	r22, 0x26	; 38
 468:	71 e0       	ldi	r23, 0x01	; 1
 46a:	81 e1       	ldi	r24, 0x11	; 17
 46c:	40 df       	rcall	.-384    	; 0x2ee <LCD_DisplayString>
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	be de       	rcall	.-644    	; 0x1ee <USART_Flush>
 472:	61 e0       	ldi	r22, 0x01	; 1
 474:	8f ee       	ldi	r24, 0xEF	; 239
 476:	d8 de       	rcall	.-592    	; 0x228 <USART_Send>
 478:	61 e0       	ldi	r22, 0x01	; 1
 47a:	81 e0       	ldi	r24, 0x01	; 1
 47c:	d5 de       	rcall	.-598    	; 0x228 <USART_Send>
 47e:	61 e0       	ldi	r22, 0x01	; 1
 480:	8f ef       	ldi	r24, 0xFF	; 255
 482:	d2 de       	rcall	.-604    	; 0x228 <USART_Send>
 484:	61 e0       	ldi	r22, 0x01	; 1
 486:	8f ef       	ldi	r24, 0xFF	; 255
 488:	cf de       	rcall	.-610    	; 0x228 <USART_Send>
 48a:	61 e0       	ldi	r22, 0x01	; 1
 48c:	8f ef       	ldi	r24, 0xFF	; 255
 48e:	cc de       	rcall	.-616    	; 0x228 <USART_Send>
 490:	61 e0       	ldi	r22, 0x01	; 1
 492:	8f ef       	ldi	r24, 0xFF	; 255
 494:	c9 de       	rcall	.-622    	; 0x228 <USART_Send>
 496:	61 e0       	ldi	r22, 0x01	; 1
 498:	81 e0       	ldi	r24, 0x01	; 1
 49a:	c6 de       	rcall	.-628    	; 0x228 <USART_Send>
 49c:	61 e0       	ldi	r22, 0x01	; 1
 49e:	80 e0       	ldi	r24, 0x00	; 0
 4a0:	c3 de       	rcall	.-634    	; 0x228 <USART_Send>
 4a2:	61 e0       	ldi	r22, 0x01	; 1
 4a4:	83 e0       	ldi	r24, 0x03	; 3
 4a6:	c0 de       	rcall	.-640    	; 0x228 <USART_Send>
 4a8:	61 e0       	ldi	r22, 0x01	; 1
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	bd de       	rcall	.-646    	; 0x228 <USART_Send>
 4ae:	61 e0       	ldi	r22, 0x01	; 1
 4b0:	80 e0       	ldi	r24, 0x00	; 0
 4b2:	ba de       	rcall	.-652    	; 0x228 <USART_Send>
 4b4:	61 e0       	ldi	r22, 0x01	; 1
 4b6:	85 e0       	ldi	r24, 0x05	; 5
 4b8:	b7 de       	rcall	.-658    	; 0x228 <USART_Send>
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	c7 de       	rcall	.-626    	; 0x24c <USART_Receive>
 4be:	c0 e0       	ldi	r28, 0x00	; 0
 4c0:	d0 e0       	ldi	r29, 0x00	; 0
 4c2:	e1 2c       	mov	r14, r1
 4c4:	f1 2c       	mov	r15, r1
 4c6:	4b c0       	rjmp	.+150    	; 0x55e <read_finger_2+0x114>
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	c0 de       	rcall	.-640    	; 0x24c <USART_Receive>
 4cc:	18 2f       	mov	r17, r24
 4ce:	c9 30       	cpi	r28, 0x09	; 9
 4d0:	d1 05       	cpc	r29, r1
 4d2:	09 f0       	breq	.+2      	; 0x4d6 <read_finger_2+0x8c>
 4d4:	44 c0       	rjmp	.+136    	; 0x55e <read_finger_2+0x114>
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	b9 de       	rcall	.-654    	; 0x24c <USART_Receive>
 4da:	81 e0       	ldi	r24, 0x01	; 1
 4dc:	b7 de       	rcall	.-658    	; 0x24c <USART_Receive>
 4de:	11 11       	cpse	r17, r1
 4e0:	43 c0       	rjmp	.+134    	; 0x568 <read_finger_2+0x11e>
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	84 de       	rcall	.-760    	; 0x1ee <USART_Flush>
 4e6:	61 e0       	ldi	r22, 0x01	; 1
 4e8:	8f ee       	ldi	r24, 0xEF	; 239
 4ea:	9e de       	rcall	.-708    	; 0x228 <USART_Send>
 4ec:	61 e0       	ldi	r22, 0x01	; 1
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	9b de       	rcall	.-714    	; 0x228 <USART_Send>
 4f2:	61 e0       	ldi	r22, 0x01	; 1
 4f4:	8f ef       	ldi	r24, 0xFF	; 255
 4f6:	98 de       	rcall	.-720    	; 0x228 <USART_Send>
 4f8:	61 e0       	ldi	r22, 0x01	; 1
 4fa:	8f ef       	ldi	r24, 0xFF	; 255
 4fc:	95 de       	rcall	.-726    	; 0x228 <USART_Send>
 4fe:	61 e0       	ldi	r22, 0x01	; 1
 500:	8f ef       	ldi	r24, 0xFF	; 255
 502:	92 de       	rcall	.-732    	; 0x228 <USART_Send>
 504:	61 e0       	ldi	r22, 0x01	; 1
 506:	8f ef       	ldi	r24, 0xFF	; 255
 508:	8f de       	rcall	.-738    	; 0x228 <USART_Send>
 50a:	61 e0       	ldi	r22, 0x01	; 1
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	8c de       	rcall	.-744    	; 0x228 <USART_Send>
 510:	61 e0       	ldi	r22, 0x01	; 1
 512:	80 e0       	ldi	r24, 0x00	; 0
 514:	89 de       	rcall	.-750    	; 0x228 <USART_Send>
 516:	61 e0       	ldi	r22, 0x01	; 1
 518:	84 e0       	ldi	r24, 0x04	; 4
 51a:	86 de       	rcall	.-756    	; 0x228 <USART_Send>
 51c:	61 e0       	ldi	r22, 0x01	; 1
 51e:	82 e0       	ldi	r24, 0x02	; 2
 520:	83 de       	rcall	.-762    	; 0x228 <USART_Send>
 522:	61 e0       	ldi	r22, 0x01	; 1
 524:	82 e0       	ldi	r24, 0x02	; 2
 526:	80 de       	rcall	.-768    	; 0x228 <USART_Send>
 528:	61 e0       	ldi	r22, 0x01	; 1
 52a:	80 e0       	ldi	r24, 0x00	; 0
 52c:	7d de       	rcall	.-774    	; 0x228 <USART_Send>
 52e:	61 e0       	ldi	r22, 0x01	; 1
 530:	89 e0       	ldi	r24, 0x09	; 9
 532:	7a de       	rcall	.-780    	; 0x228 <USART_Send>
 534:	81 e0       	ldi	r24, 0x01	; 1
 536:	8a de       	rcall	.-748    	; 0x24c <USART_Receive>
 538:	ce 2d       	mov	r28, r14
 53a:	df 2d       	mov	r29, r15
 53c:	06 c0       	rjmp	.+12     	; 0x54a <read_finger_2+0x100>
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	85 de       	rcall	.-758    	; 0x24c <USART_Receive>
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	83 de       	rcall	.-762    	; 0x24c <USART_Receive>
 546:	22 96       	adiw	r28, 0x02	; 2
 548:	0a c0       	rjmp	.+20     	; 0x55e <read_finger_2+0x114>
 54a:	8e 01       	movw	r16, r28
 54c:	0f 5f       	subi	r16, 0xFF	; 255
 54e:	1f 4f       	sbci	r17, 0xFF	; 255
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	7c de       	rcall	.-776    	; 0x24c <USART_Receive>
 554:	09 30       	cpi	r16, 0x09	; 9
 556:	11 05       	cpc	r17, r1
 558:	91 f3       	breq	.-28     	; 0x53e <read_finger_2+0xf4>
 55a:	e8 01       	movw	r28, r16
 55c:	f6 cf       	rjmp	.-20     	; 0x54a <read_finger_2+0x100>
 55e:	21 96       	adiw	r28, 0x01	; 1
 560:	ca 30       	cpi	r28, 0x0A	; 10
 562:	d1 05       	cpc	r29, r1
 564:	0c f4       	brge	.+2      	; 0x568 <read_finger_2+0x11e>
 566:	b0 cf       	rjmp	.-160    	; 0x4c8 <read_finger_2+0x7e>
 568:	88 ee       	ldi	r24, 0xE8	; 232
 56a:	93 e0       	ldi	r25, 0x03	; 3
 56c:	81 de       	rcall	.-766    	; 0x270 <delay_ms>
 56e:	df 91       	pop	r29
 570:	cf 91       	pop	r28
 572:	1f 91       	pop	r17
 574:	0f 91       	pop	r16
 576:	ff 90       	pop	r15
 578:	ef 90       	pop	r14
 57a:	08 95       	ret

0000057c <make_template>:
 57c:	cf 93       	push	r28
 57e:	df 93       	push	r29
 580:	67 e3       	ldi	r22, 0x37	; 55
 582:	71 e0       	ldi	r23, 0x01	; 1
 584:	81 e1       	ldi	r24, 0x11	; 17
 586:	b3 de       	rcall	.-666    	; 0x2ee <LCD_DisplayString>
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	31 de       	rcall	.-926    	; 0x1ee <USART_Flush>
 58c:	61 e0       	ldi	r22, 0x01	; 1
 58e:	8f ee       	ldi	r24, 0xEF	; 239
 590:	4b de       	rcall	.-874    	; 0x228 <USART_Send>
 592:	61 e0       	ldi	r22, 0x01	; 1
 594:	81 e0       	ldi	r24, 0x01	; 1
 596:	48 de       	rcall	.-880    	; 0x228 <USART_Send>
 598:	61 e0       	ldi	r22, 0x01	; 1
 59a:	8f ef       	ldi	r24, 0xFF	; 255
 59c:	45 de       	rcall	.-886    	; 0x228 <USART_Send>
 59e:	61 e0       	ldi	r22, 0x01	; 1
 5a0:	8f ef       	ldi	r24, 0xFF	; 255
 5a2:	42 de       	rcall	.-892    	; 0x228 <USART_Send>
 5a4:	61 e0       	ldi	r22, 0x01	; 1
 5a6:	8f ef       	ldi	r24, 0xFF	; 255
 5a8:	3f de       	rcall	.-898    	; 0x228 <USART_Send>
 5aa:	61 e0       	ldi	r22, 0x01	; 1
 5ac:	8f ef       	ldi	r24, 0xFF	; 255
 5ae:	3c de       	rcall	.-904    	; 0x228 <USART_Send>
 5b0:	61 e0       	ldi	r22, 0x01	; 1
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	39 de       	rcall	.-910    	; 0x228 <USART_Send>
 5b6:	61 e0       	ldi	r22, 0x01	; 1
 5b8:	80 e0       	ldi	r24, 0x00	; 0
 5ba:	36 de       	rcall	.-916    	; 0x228 <USART_Send>
 5bc:	61 e0       	ldi	r22, 0x01	; 1
 5be:	83 e0       	ldi	r24, 0x03	; 3
 5c0:	33 de       	rcall	.-922    	; 0x228 <USART_Send>
 5c2:	61 e0       	ldi	r22, 0x01	; 1
 5c4:	85 e0       	ldi	r24, 0x05	; 5
 5c6:	30 de       	rcall	.-928    	; 0x228 <USART_Send>
 5c8:	61 e0       	ldi	r22, 0x01	; 1
 5ca:	80 e0       	ldi	r24, 0x00	; 0
 5cc:	2d de       	rcall	.-934    	; 0x228 <USART_Send>
 5ce:	61 e0       	ldi	r22, 0x01	; 1
 5d0:	89 e0       	ldi	r24, 0x09	; 9
 5d2:	2a de       	rcall	.-940    	; 0x228 <USART_Send>
 5d4:	81 e0       	ldi	r24, 0x01	; 1
 5d6:	3a de       	rcall	.-908    	; 0x24c <USART_Receive>
 5d8:	c9 e0       	ldi	r28, 0x09	; 9
 5da:	d0 e0       	ldi	r29, 0x00	; 0
 5dc:	05 c0       	rjmp	.+10     	; 0x5e8 <make_template+0x6c>
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	35 de       	rcall	.-918    	; 0x24c <USART_Receive>
 5e2:	81 e0       	ldi	r24, 0x01	; 1
 5e4:	33 de       	rcall	.-922    	; 0x24c <USART_Receive>
 5e6:	05 c0       	rjmp	.+10     	; 0x5f2 <make_template+0x76>
 5e8:	81 e0       	ldi	r24, 0x01	; 1
 5ea:	30 de       	rcall	.-928    	; 0x24c <USART_Receive>
 5ec:	21 97       	sbiw	r28, 0x01	; 1
 5ee:	e1 f7       	brne	.-8      	; 0x5e8 <make_template+0x6c>
 5f0:	f6 cf       	rjmp	.-20     	; 0x5de <make_template+0x62>
 5f2:	df 91       	pop	r29
 5f4:	cf 91       	pop	r28
 5f6:	08 95       	ret

000005f8 <check_finger>:
 5f8:	1f 93       	push	r17
 5fa:	cf 93       	push	r28
 5fc:	df 93       	push	r29
 5fe:	67 e4       	ldi	r22, 0x47	; 71
 600:	71 e0       	ldi	r23, 0x01	; 1
 602:	81 e0       	ldi	r24, 0x01	; 1
 604:	74 de       	rcall	.-792    	; 0x2ee <LCD_DisplayString>
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	f2 dd       	rcall	.-1052   	; 0x1ee <USART_Flush>
 60a:	61 e0       	ldi	r22, 0x01	; 1
 60c:	8f ee       	ldi	r24, 0xEF	; 239
 60e:	0c de       	rcall	.-1000   	; 0x228 <USART_Send>
 610:	61 e0       	ldi	r22, 0x01	; 1
 612:	81 e0       	ldi	r24, 0x01	; 1
 614:	09 de       	rcall	.-1006   	; 0x228 <USART_Send>
 616:	61 e0       	ldi	r22, 0x01	; 1
 618:	8f ef       	ldi	r24, 0xFF	; 255
 61a:	06 de       	rcall	.-1012   	; 0x228 <USART_Send>
 61c:	61 e0       	ldi	r22, 0x01	; 1
 61e:	8f ef       	ldi	r24, 0xFF	; 255
 620:	03 de       	rcall	.-1018   	; 0x228 <USART_Send>
 622:	61 e0       	ldi	r22, 0x01	; 1
 624:	8f ef       	ldi	r24, 0xFF	; 255
 626:	00 de       	rcall	.-1024   	; 0x228 <USART_Send>
 628:	61 e0       	ldi	r22, 0x01	; 1
 62a:	8f ef       	ldi	r24, 0xFF	; 255
 62c:	fd dd       	rcall	.-1030   	; 0x228 <USART_Send>
 62e:	61 e0       	ldi	r22, 0x01	; 1
 630:	81 e0       	ldi	r24, 0x01	; 1
 632:	fa dd       	rcall	.-1036   	; 0x228 <USART_Send>
 634:	61 e0       	ldi	r22, 0x01	; 1
 636:	80 e0       	ldi	r24, 0x00	; 0
 638:	f7 dd       	rcall	.-1042   	; 0x228 <USART_Send>
 63a:	61 e0       	ldi	r22, 0x01	; 1
 63c:	88 e0       	ldi	r24, 0x08	; 8
 63e:	f4 dd       	rcall	.-1048   	; 0x228 <USART_Send>
 640:	61 e0       	ldi	r22, 0x01	; 1
 642:	84 e0       	ldi	r24, 0x04	; 4
 644:	f1 dd       	rcall	.-1054   	; 0x228 <USART_Send>
 646:	61 e0       	ldi	r22, 0x01	; 1
 648:	81 e0       	ldi	r24, 0x01	; 1
 64a:	ee dd       	rcall	.-1060   	; 0x228 <USART_Send>
 64c:	61 e0       	ldi	r22, 0x01	; 1
 64e:	80 e0       	ldi	r24, 0x00	; 0
 650:	eb dd       	rcall	.-1066   	; 0x228 <USART_Send>
 652:	61 e0       	ldi	r22, 0x01	; 1
 654:	80 e0       	ldi	r24, 0x00	; 0
 656:	e8 dd       	rcall	.-1072   	; 0x228 <USART_Send>
 658:	61 e0       	ldi	r22, 0x01	; 1
 65a:	80 e0       	ldi	r24, 0x00	; 0
 65c:	e5 dd       	rcall	.-1078   	; 0x228 <USART_Send>
 65e:	61 e0       	ldi	r22, 0x01	; 1
 660:	8a e0       	ldi	r24, 0x0A	; 10
 662:	e2 dd       	rcall	.-1084   	; 0x228 <USART_Send>
 664:	61 e0       	ldi	r22, 0x01	; 1
 666:	80 e0       	ldi	r24, 0x00	; 0
 668:	df dd       	rcall	.-1090   	; 0x228 <USART_Send>
 66a:	61 e0       	ldi	r22, 0x01	; 1
 66c:	88 e1       	ldi	r24, 0x18	; 24
 66e:	dc dd       	rcall	.-1096   	; 0x228 <USART_Send>
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	ec dd       	rcall	.-1064   	; 0x24c <USART_Receive>
 674:	c9 e0       	ldi	r28, 0x09	; 9
 676:	d0 e0       	ldi	r29, 0x00	; 0
 678:	26 c0       	rjmp	.+76     	; 0x6c6 <check_finger+0xce>
 67a:	81 e0       	ldi	r24, 0x01	; 1
 67c:	e7 dd       	rcall	.-1074   	; 0x24c <USART_Receive>
 67e:	81 e0       	ldi	r24, 0x01	; 1
 680:	e5 dd       	rcall	.-1078   	; 0x24c <USART_Receive>
 682:	81 e0       	ldi	r24, 0x01	; 1
 684:	e3 dd       	rcall	.-1082   	; 0x24c <USART_Receive>
 686:	81 e0       	ldi	r24, 0x01	; 1
 688:	e1 dd       	rcall	.-1086   	; 0x24c <USART_Receive>
 68a:	81 e0       	ldi	r24, 0x01	; 1
 68c:	df dd       	rcall	.-1090   	; 0x24c <USART_Receive>
 68e:	81 e0       	ldi	r24, 0x01	; 1
 690:	dd dd       	rcall	.-1094   	; 0x24c <USART_Receive>
 692:	c8 2f       	mov	r28, r24
 694:	11 11       	cpse	r17, r1
 696:	0e c0       	rjmp	.+28     	; 0x6b4 <check_finger+0xbc>
 698:	67 e5       	ldi	r22, 0x57	; 87
 69a:	71 e0       	ldi	r23, 0x01	; 1
 69c:	81 e0       	ldi	r24, 0x01	; 1
 69e:	27 de       	rcall	.-946    	; 0x2ee <LCD_DisplayString>
 6a0:	68 e6       	ldi	r22, 0x68	; 104
 6a2:	71 e0       	ldi	r23, 0x01	; 1
 6a4:	81 e1       	ldi	r24, 0x11	; 17
 6a6:	23 de       	rcall	.-954    	; 0x2ee <LCD_DisplayString>
 6a8:	6c 2f       	mov	r22, r28
 6aa:	70 e0       	ldi	r23, 0x00	; 0
 6ac:	8c e1       	ldi	r24, 0x1C	; 28
 6ae:	1f de       	rcall	.-962    	; 0x2ee <LCD_DisplayString>
 6b0:	29 9a       	sbi	0x05, 1	; 5
 6b2:	0f c0       	rjmp	.+30     	; 0x6d2 <check_finger+0xda>
 6b4:	6b e7       	ldi	r22, 0x7B	; 123
 6b6:	71 e0       	ldi	r23, 0x01	; 1
 6b8:	81 e0       	ldi	r24, 0x01	; 1
 6ba:	19 de       	rcall	.-974    	; 0x2ee <LCD_DisplayString>
 6bc:	6c e8       	ldi	r22, 0x8C	; 140
 6be:	71 e0       	ldi	r23, 0x01	; 1
 6c0:	81 e1       	ldi	r24, 0x11	; 17
 6c2:	15 de       	rcall	.-982    	; 0x2ee <LCD_DisplayString>
 6c4:	06 c0       	rjmp	.+12     	; 0x6d2 <check_finger+0xda>
 6c6:	81 e0       	ldi	r24, 0x01	; 1
 6c8:	c1 dd       	rcall	.-1150   	; 0x24c <USART_Receive>
 6ca:	18 2f       	mov	r17, r24
 6cc:	21 97       	sbiw	r28, 0x01	; 1
 6ce:	d9 f7       	brne	.-10     	; 0x6c6 <check_finger+0xce>
 6d0:	d4 cf       	rjmp	.-88     	; 0x67a <check_finger+0x82>
 6d2:	88 ee       	ldi	r24, 0xE8	; 232
 6d4:	93 e0       	ldi	r25, 0x03	; 3
 6d6:	cc dd       	rcall	.-1128   	; 0x270 <delay_ms>
 6d8:	df 91       	pop	r29
 6da:	cf 91       	pop	r28
 6dc:	1f 91       	pop	r17
 6de:	08 95       	ret

000006e0 <fingerPrint>:

enum States1 {init1, readFinger1, readFinger2, makeTemplate, checkFinger} state1;
	
void fingerPrint() {
	switch(state1) {
 6e0:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <state1>
 6e4:	82 30       	cpi	r24, 0x02	; 2
 6e6:	e9 f0       	breq	.+58     	; 0x722 <fingerPrint+0x42>
 6e8:	28 f4       	brcc	.+10     	; 0x6f4 <fingerPrint+0x14>
 6ea:	88 23       	and	r24, r24
 6ec:	41 f0       	breq	.+16     	; 0x6fe <fingerPrint+0x1e>
 6ee:	81 30       	cpi	r24, 0x01	; 1
 6f0:	81 f0       	breq	.+32     	; 0x712 <fingerPrint+0x32>
 6f2:	2a c0       	rjmp	.+84     	; 0x748 <fingerPrint+0x68>
 6f4:	83 30       	cpi	r24, 0x03	; 3
 6f6:	e9 f0       	breq	.+58     	; 0x732 <fingerPrint+0x52>
 6f8:	84 30       	cpi	r24, 0x04	; 4
 6fa:	19 f1       	breq	.+70     	; 0x742 <fingerPrint+0x62>
 6fc:	25 c0       	rjmp	.+74     	; 0x748 <fingerPrint+0x68>
		case init1:
			if(GetBit(PINA, 1) == 0) {
 6fe:	01 99       	sbic	0x00, 1	; 0
 700:	25 c0       	rjmp	.+74     	; 0x74c <fingerPrint+0x6c>
				state1 = readFinger1;
 702:	81 e0       	ldi	r24, 0x01	; 1
 704:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <state1>
		case init1:
			PORTB &= ~(1 << PB1);
			LCD_ClearScreen();
			break;
		case readFinger1:
			read_finger_1();
 708:	07 de       	rcall	.-1010   	; 0x318 <read_finger_1>
			delay_ms(1000);
 70a:	88 ee       	ldi	r24, 0xE8	; 232
 70c:	93 e0       	ldi	r25, 0x03	; 3
 70e:	b0 cd       	rjmp	.-1184   	; 0x270 <delay_ms>
			break;
 710:	08 95       	ret
			else {
				state1 = init1;
			}
			break;
		case readFinger1:
			state1 = readFinger2;
 712:	82 e0       	ldi	r24, 0x02	; 2
 714:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <state1>
			read_finger_1();
			delay_ms(1000);
			break;
		case readFinger2:
			read_finger_2();
			delay_ms(1000);
 718:	98 de       	rcall	.-720    	; 0x44a <read_finger_2>
 71a:	88 ee       	ldi	r24, 0xE8	; 232
 71c:	93 e0       	ldi	r25, 0x03	; 3
 71e:	a8 cd       	rjmp	.-1200   	; 0x270 <delay_ms>
			break;
		case readFinger1:
			state1 = readFinger2;
			break;
		case readFinger2:
			state1 = makeTemplate;
 720:	08 95       	ret
 722:	83 e0       	ldi	r24, 0x03	; 3
		case readFinger2:
			read_finger_2();
			delay_ms(1000);
			break;
		case makeTemplate:
			make_template();
 724:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <state1>
			delay_ms(500);
 728:	29 df       	rcall	.-430    	; 0x57c <make_template>
 72a:	84 ef       	ldi	r24, 0xF4	; 244
 72c:	91 e0       	ldi	r25, 0x01	; 1
			break;
 72e:	a0 cd       	rjmp	.-1216   	; 0x270 <delay_ms>
			break;
		case readFinger2:
			state1 = makeTemplate;
			break;
		case makeTemplate:
			state1 = checkFinger;
 730:	08 95       	ret
 732:	84 e0       	ldi	r24, 0x04	; 4
		case makeTemplate:
			make_template();
			delay_ms(500);
			break;
		case checkFinger:
			check_finger();
 734:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <state1>
			delay_ms(10000);
 738:	5f df       	rcall	.-322    	; 0x5f8 <check_finger>
 73a:	80 e1       	ldi	r24, 0x10	; 16
 73c:	97 e2       	ldi	r25, 0x27	; 39
			break;
 73e:	98 cd       	rjmp	.-1232   	; 0x270 <delay_ms>
			break;
		case makeTemplate:
			state1 = checkFinger;
			break;
		case checkFinger:
			state1 = init1;
 740:	08 95       	ret
 742:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <state1>
			break;
		default:
			state1 = init1;
 746:	02 c0       	rjmp	.+4      	; 0x74c <fingerPrint+0x6c>
 748:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <state1>
	}
	
	switch(state1) {
		case init1:
			PORTB &= ~(1 << PB1);
			LCD_ClearScreen();
 74c:	29 98       	cbi	0x05, 1	; 5
 74e:	ac cd       	rjmp	.-1192   	; 0x2a8 <LCD_ClearScreen>
 750:	08 95       	ret

00000752 <main>:
//////////////////////////////////////////////////

int main(void)
{
	
	DDRA = 0x00;	PORTA = 0xFE;
 752:	11 b8       	out	0x01, r1	; 1
 754:	8e ef       	ldi	r24, 0xFE	; 254
 756:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF;	PORTB = 0x00;
 758:	9f ef       	ldi	r25, 0xFF	; 255
 75a:	94 b9       	out	0x04, r25	; 4
 75c:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF;	PORTC = 0x00;
 75e:	97 b9       	out	0x07, r25	; 7
 760:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFE;	PORTD = 0x01;
 762:	8a b9       	out	0x0a, r24	; 10
 764:	81 e0       	ldi	r24, 0x01	; 1
 766:	8b b9       	out	0x0b, r24	; 11
	
	TimerSet(50);
 768:	62 e3       	ldi	r22, 0x32	; 50
 76a:	70 e0       	ldi	r23, 0x00	; 0
 76c:	80 e0       	ldi	r24, 0x00	; 0
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	ab dc       	rcall	.-1706   	; 0xc8 <TimerSet>
	TimerOn();
 772:	bb dc       	rcall	.-1674   	; 0xea <TimerOn>
 774:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <state1>
	
	state1 = init1;
	
	LCD_init();
 778:	9a dd       	rcall	.-1228   	; 0x2ae <LCD_init>
	LCD_ClearScreen();
 77a:	96 dd       	rcall	.-1236   	; 0x2a8 <LCD_ClearScreen>
	//initUSART(0);
	initUSART(1);
 77c:	81 e0       	ldi	r24, 0x01	; 1
 77e:	15 dd       	rcall	.-1494   	; 0x1aa <initUSART>
 780:	af df       	rcall	.-162    	; 0x6e0 <fingerPrint>
		//}
		//if(lock == 1) {
			// Fingerprint scanner
			//alarm();
			//_delay_ms(1000);
			fingerPrint();
 782:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <TimerFlag>
		//delay_ms(1000);
		//LCD_ClearScreen();
		
		
		
		while (!TimerFlag){}
 786:	88 23       	and	r24, r24
 788:	e1 f3       	breq	.-8      	; 0x782 <main+0x30>
 78a:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <TimerFlag>
		TimerFlag = 0;
 78e:	f8 cf       	rjmp	.-16     	; 0x780 <main+0x2e>

00000790 <_exit>:
 790:	f8 94       	cli

00000792 <__stop_program>:
    }
 792:	ff cf       	rjmp	.-2      	; 0x792 <__stop_program>
