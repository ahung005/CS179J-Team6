
Rasp2Atmega.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000200  00800100  00000294  00000328  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000294  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800300  00800300  00000528  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000558  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010e2  00000000  00000000  00000698  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009d0  00000000  00000000  0000177a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000845  00000000  00000000  0000214a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000270  00000000  00000000  00002990  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ef  00000000  00000000  00002c00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006a2  00000000  00000000  000031ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00003891  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	49 c0       	rjmp	.+146    	; 0xc8 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	13 e0       	ldi	r17, 0x03	; 3
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e9       	ldi	r30, 0x94	; 148
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	23 e0       	ldi	r18, 0x03	; 3
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b3 e0       	ldi	r27, 0x03	; 3
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a5 30       	cpi	r26, 0x05	; 5
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	ca d0       	rcall	.+404    	; 0x258 <main>
  c4:	e5 c0       	rjmp	.+458    	; 0x290 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_13>:
	{
		SPI_Write(image_data[k]);
	}
	PORTB &= ~(1<<DC);
	SPI_SS_Disable();
}
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
  d6:	af 93       	push	r26
  d8:	bf 93       	push	r27
  da:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <__data_end>
  de:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <__data_end+0x1>
  e2:	a0 91 02 03 	lds	r26, 0x0302	; 0x800302 <__data_end+0x2>
  e6:	b0 91 03 03 	lds	r27, 0x0303	; 0x800303 <__data_end+0x3>
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	a1 09       	sbc	r26, r1
  ee:	b1 09       	sbc	r27, r1
  f0:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <__data_end>
  f4:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <__data_end+0x1>
  f8:	a0 93 02 03 	sts	0x0302, r26	; 0x800302 <__data_end+0x2>
  fc:	b0 93 03 03 	sts	0x0303, r27	; 0x800303 <__data_end+0x3>
 100:	89 2b       	or	r24, r25
 102:	8a 2b       	or	r24, r26
 104:	8b 2b       	or	r24, r27
 106:	99 f4       	brne	.+38     	; 0x12e <__vector_13+0x66>
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	80 93 04 03 	sts	0x0304, r24	; 0x800304 <TimerFlag>
 10e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 112:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 116:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 11a:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 11e:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <__data_end>
 122:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <__data_end+0x1>
 126:	a0 93 02 03 	sts	0x0302, r26	; 0x800302 <__data_end+0x2>
 12a:	b0 93 03 03 	sts	0x0303, r27	; 0x800303 <__data_end+0x3>
 12e:	bf 91       	pop	r27
 130:	af 91       	pop	r26
 132:	9f 91       	pop	r25
 134:	8f 91       	pop	r24
 136:	0f 90       	pop	r0
 138:	0f be       	out	0x3f, r0	; 63
 13a:	0f 90       	pop	r0
 13c:	1f 90       	pop	r1
 13e:	18 95       	reti

00000140 <SPI_SS_Enable>:
 140:	2c 98       	cbi	0x05, 4	; 5
 142:	08 95       	ret

00000144 <SPI_SS_Disable>:
 144:	2c 9a       	sbi	0x05, 4	; 5
 146:	08 95       	ret

00000148 <SPI_Init>:
 148:	8b eb       	ldi	r24, 0xBB	; 187
 14a:	84 b9       	out	0x04, r24	; 4
 14c:	28 9a       	sbi	0x05, 0	; 5
 14e:	2b 9a       	sbi	0x05, 3	; 5
 150:	26 98       	cbi	0x04, 6	; 4
 152:	2c 9a       	sbi	0x05, 4	; 5
 154:	81 e5       	ldi	r24, 0x51	; 81
 156:	8c bd       	out	0x2c, r24	; 44
 158:	08 95       	ret

0000015a <SPI_Write>:
 15a:	8e bd       	out	0x2e, r24	; 46
 15c:	0d b4       	in	r0, 0x2d	; 45
 15e:	07 fe       	sbrs	r0, 7
 160:	fd cf       	rjmp	.-6      	; 0x15c <SPI_Write+0x2>
 162:	08 95       	ret

00000164 <N5110_Cmnd>:
 164:	cf 93       	push	r28
 166:	c8 2f       	mov	r28, r24
 168:	29 98       	cbi	0x05, 1	; 5
 16a:	ea df       	rcall	.-44     	; 0x140 <SPI_SS_Enable>
 16c:	8c 2f       	mov	r24, r28
 16e:	f5 df       	rcall	.-22     	; 0x15a <SPI_Write>
 170:	29 9a       	sbi	0x05, 1	; 5
 172:	e8 df       	rcall	.-48     	; 0x144 <SPI_SS_Disable>
 174:	cf 91       	pop	r28
 176:	08 95       	ret

00000178 <N5110_Data>:
 178:	ef 92       	push	r14
 17a:	ff 92       	push	r15
 17c:	0f 93       	push	r16
 17e:	1f 93       	push	r17
 180:	cf 93       	push	r28
 182:	df 93       	push	r29
 184:	8c 01       	movw	r16, r24
 186:	29 9a       	sbi	0x05, 1	; 5
 188:	db df       	rcall	.-74     	; 0x140 <SPI_SS_Enable>
 18a:	f8 01       	movw	r30, r16
 18c:	01 90       	ld	r0, Z+
 18e:	00 20       	and	r0, r0
 190:	e9 f7       	brne	.-6      	; 0x18c <N5110_Data+0x14>
 192:	31 97       	sbiw	r30, 0x01	; 1
 194:	e0 1b       	sub	r30, r16
 196:	f1 0b       	sbc	r31, r17
 198:	1e 16       	cp	r1, r30
 19a:	1f 06       	cpc	r1, r31
 19c:	2c f5       	brge	.+74     	; 0x1e8 <N5110_Data+0x70>
 19e:	e8 01       	movw	r28, r16
 1a0:	0e 0f       	add	r16, r30
 1a2:	1f 1f       	adc	r17, r31
 1a4:	1e c0       	rjmp	.+60     	; 0x1e2 <N5110_Data+0x6a>
 1a6:	28 81       	ld	r18, Y
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	20 52       	subi	r18, 0x20	; 32
 1ac:	31 09       	sbc	r19, r1
 1ae:	f9 01       	movw	r30, r18
 1b0:	ee 0f       	add	r30, r30
 1b2:	ff 1f       	adc	r31, r31
 1b4:	ee 0f       	add	r30, r30
 1b6:	ff 1f       	adc	r31, r31
 1b8:	e2 0f       	add	r30, r18
 1ba:	f3 1f       	adc	r31, r19
 1bc:	e0 5e       	subi	r30, 0xE0	; 224
 1be:	fe 4f       	sbci	r31, 0xFE	; 254
 1c0:	ee 0d       	add	r30, r14
 1c2:	ff 1d       	adc	r31, r15
 1c4:	80 81       	ld	r24, Z
 1c6:	c9 df       	rcall	.-110    	; 0x15a <SPI_Write>
 1c8:	8f ef       	ldi	r24, 0xFF	; 255
 1ca:	e8 1a       	sub	r14, r24
 1cc:	f8 0a       	sbc	r15, r24
 1ce:	85 e0       	ldi	r24, 0x05	; 5
 1d0:	e8 16       	cp	r14, r24
 1d2:	f1 04       	cpc	r15, r1
 1d4:	41 f7       	brne	.-48     	; 0x1a6 <N5110_Data+0x2e>
 1d6:	80 e0       	ldi	r24, 0x00	; 0
 1d8:	c0 df       	rcall	.-128    	; 0x15a <SPI_Write>
 1da:	21 96       	adiw	r28, 0x01	; 1
 1dc:	0c 17       	cp	r16, r28
 1de:	1d 07       	cpc	r17, r29
 1e0:	19 f0       	breq	.+6      	; 0x1e8 <N5110_Data+0x70>
 1e2:	e1 2c       	mov	r14, r1
 1e4:	f1 2c       	mov	r15, r1
 1e6:	df cf       	rjmp	.-66     	; 0x1a6 <N5110_Data+0x2e>
 1e8:	ad df       	rcall	.-166    	; 0x144 <SPI_SS_Disable>
 1ea:	df 91       	pop	r29
 1ec:	cf 91       	pop	r28
 1ee:	1f 91       	pop	r17
 1f0:	0f 91       	pop	r16
 1f2:	ff 90       	pop	r15
 1f4:	ef 90       	pop	r14
 1f6:	08 95       	ret

000001f8 <N5110_Reset>:
 1f8:	28 98       	cbi	0x05, 0	; 5
 1fa:	2f ef       	ldi	r18, 0xFF	; 255
 1fc:	80 e7       	ldi	r24, 0x70	; 112
 1fe:	92 e0       	ldi	r25, 0x02	; 2
 200:	21 50       	subi	r18, 0x01	; 1
 202:	80 40       	sbci	r24, 0x00	; 0
 204:	90 40       	sbci	r25, 0x00	; 0
 206:	e1 f7       	brne	.-8      	; 0x200 <N5110_Reset+0x8>
 208:	00 c0       	rjmp	.+0      	; 0x20a <N5110_Reset+0x12>
 20a:	00 00       	nop
 20c:	28 9a       	sbi	0x05, 0	; 5
 20e:	08 95       	ret

00000210 <N5110_init>:
 210:	f3 df       	rcall	.-26     	; 0x1f8 <N5110_Reset>
 212:	81 e2       	ldi	r24, 0x21	; 33
 214:	a7 df       	rcall	.-178    	; 0x164 <N5110_Cmnd>
 216:	80 ec       	ldi	r24, 0xC0	; 192
 218:	a5 df       	rcall	.-182    	; 0x164 <N5110_Cmnd>
 21a:	87 e0       	ldi	r24, 0x07	; 7
 21c:	a3 df       	rcall	.-186    	; 0x164 <N5110_Cmnd>
 21e:	83 e1       	ldi	r24, 0x13	; 19
 220:	a1 df       	rcall	.-190    	; 0x164 <N5110_Cmnd>
 222:	80 e2       	ldi	r24, 0x20	; 32
 224:	9f df       	rcall	.-194    	; 0x164 <N5110_Cmnd>
 226:	8c e0       	ldi	r24, 0x0C	; 12
 228:	9d cf       	rjmp	.-198    	; 0x164 <N5110_Cmnd>
 22a:	08 95       	ret

0000022c <lcd_setXY>:
 22c:	cf 93       	push	r28
 22e:	c6 2f       	mov	r28, r22
 230:	99 df       	rcall	.-206    	; 0x164 <N5110_Cmnd>
 232:	8c 2f       	mov	r24, r28
 234:	97 df       	rcall	.-210    	; 0x164 <N5110_Cmnd>
 236:	cf 91       	pop	r28
 238:	08 95       	ret

0000023a <N5110_clear>:
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	80 df       	rcall	.-256    	; 0x140 <SPI_SS_Enable>
 240:	29 9a       	sbi	0x05, 1	; 5
 242:	c8 ef       	ldi	r28, 0xF8	; 248
 244:	d1 e0       	ldi	r29, 0x01	; 1
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	88 df       	rcall	.-240    	; 0x15a <SPI_Write>
 24a:	21 97       	sbiw	r28, 0x01	; 1
 24c:	e1 f7       	brne	.-8      	; 0x246 <N5110_clear+0xc>
 24e:	29 98       	cbi	0x05, 1	; 5
 250:	79 df       	rcall	.-270    	; 0x144 <SPI_SS_Disable>
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <main>:
#include "Nokia_5110.h" 


int main(void)
{
    DDRA = 0x00; PORTA = 0xFF;
 258:	11 b8       	out	0x01, r1	; 1
 25a:	8f ef       	ldi	r24, 0xFF	; 255
 25c:	82 b9       	out	0x02, r24	; 2
	SPI_Init();
 25e:	74 df       	rcall	.-280    	; 0x148 <SPI_Init>
	N5110_init();
 260:	d7 df       	rcall	.-82     	; 0x210 <N5110_init>
	N5110_clear();
 262:	eb df       	rcall	.-42     	; 0x23a <N5110_clear>
	lcd_setXY(0x9F ,0x42);
 264:	62 e4       	ldi	r22, 0x42	; 66
 266:	8f e9       	ldi	r24, 0x9F	; 159
 268:	e1 df       	rcall	.-62     	; 0x22c <lcd_setXY>
	lcd_setXY(0x80, 0x40 +2);
 26a:	62 e4       	ldi	r22, 0x42	; 66
 26c:	80 e8       	ldi	r24, 0x80	; 128
 26e:	de df       	rcall	.-68     	; 0x22c <lcd_setXY>
	
    while (1) 
    {
		if (!GetBit(PINA, 0))
 270:	00 99       	sbic	0x00, 0	; 0
 272:	07 c0       	rjmp	.+14     	; 0x282 <main+0x2a>
		{
			lcd_setXY(0x80, 0x40 +2);
 274:	62 e4       	ldi	r22, 0x42	; 66
 276:	80 e8       	ldi	r24, 0x80	; 128
 278:	d9 df       	rcall	.-78     	; 0x22c <lcd_setXY>
			N5110_Data("RaspPi says 1");;
 27a:	84 e0       	ldi	r24, 0x04	; 4
 27c:	91 e0       	ldi	r25, 0x01	; 1
 27e:	7c df       	rcall	.-264    	; 0x178 <N5110_Data>
		}else{
			lcd_setXY(0x80, 0x40 +2);
 280:	f7 cf       	rjmp	.-18     	; 0x270 <main+0x18>
 282:	62 e4       	ldi	r22, 0x42	; 66
 284:	80 e8       	ldi	r24, 0x80	; 128
 286:	d2 df       	rcall	.-92     	; 0x22c <lcd_setXY>
			N5110_Data("RaspPi says 2");
 288:	82 e1       	ldi	r24, 0x12	; 18
 28a:	91 e0       	ldi	r25, 0x01	; 1
 28c:	75 df       	rcall	.-278    	; 0x178 <N5110_Data>
 28e:	f0 cf       	rjmp	.-32     	; 0x270 <main+0x18>

00000290 <_exit>:
 290:	f8 94       	cli

00000292 <__stop_program>:
 292:	ff cf       	rjmp	.-2      	; 0x292 <__stop_program>
